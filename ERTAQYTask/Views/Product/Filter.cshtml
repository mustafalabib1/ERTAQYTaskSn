@model PLProject.ViewModel.ProductViewModel.FilterProductViewModel

@{
    ViewData["Title"] = "Filter Products";
}

<div class="container mt-4 fade-in">
    <div class="page-header">
        <h1>
            <i class="bi bi-funnel-fill"></i> Filter Products
        </h1>
        <p class="text-muted">Search and filter products by various criteria</p>
    </div>

    <div class="row">
        <div class="col-lg-4 mb-4">
            <div class="card shadow-lg sticky-top" style="top: 20px;">
                <div class="card-header">
                    <h4 class="mb-0">
                        <i class="bi bi-sliders"></i> Filter Options
                    </h4>
                </div>
                <div class="card-body">
                    <form asp-action="Filter" method="post" id="filterForm">
                        <div class="mb-4">
                            <label class="form-label">
                                <i class="bi bi-cash-stack"></i> Price Range
                            </label>
                            <div class="row g-2">
                                <div class="col-6">
                                    <input asp-for="MinPrice" 
                                           class="form-control" 
                                           type="number" 
                                           step="0.01"
                                           placeholder="Min"
                                           aria-label="Minimum price" />
                                    <small class="text-muted">Min</small>
                                </div>
                                <div class="col-6">
                                    <input asp-for="MaxPrice" 
                                           class="form-control" 
                                           type="number" 
                                           step="0.01"
                                           placeholder="Max"
                                           aria-label="Maximum price" />
                                    <small class="text-muted">Max</small>
                                </div>
                            </div>
                        </div>

                        <div class="mb-4">
                            <label class="form-label">
                                <i class="bi bi-calendar-range"></i> Date Range
                            </label>
                            <div class="mb-2">
                                <label asp-for="FromDate" class="form-label small">From Date</label>
                                <input asp-for="FromDate" 
                                       class="form-control" 
                                       type="date"
                                       aria-label="From date" />
                            </div>
                            <div>
                                <label asp-for="ToDate" class="form-label small">To Date</label>
                                <input asp-for="ToDate" 
                                       class="form-control" 
                                       type="date"
                                       aria-label="To date" />
                            </div>
                        </div>

                        <div class="mb-4">
                            <label asp-for="ServiceProviderId" class="form-label">
                                <i class="bi bi-building"></i> Service Provider
                            </label>
                            <select asp-for="ServiceProviderId" 
                                    class="form-select" 
                                    asp-items="ViewBag.ServiceProviders"
                                    aria-label="Select service provider">
                                <option value="">-- All Providers --</option>
                            </select>
                        </div>

                        <div class="d-grid gap-2">
                            <button type="submit" class="btn btn-primary" id="applyFilterBtn">
                                <i class="bi bi-search"></i> Apply Filters
                            </button>
                            <a asp-action="Index" class="btn btn-outline-secondary">
                                <i class="bi bi-x-circle"></i> Clear All
                            </a>
                        </div>
                    </form>
                </div>
            </div>
        </div>

        <div class="col-lg-8">
            <div id="filterResults">
                <div class="card shadow-sm">
                    <div class="card-body text-center py-5">
                        <i class="bi bi-funnel display-1 text-muted mb-3"></i>
                        <h4 class="text-muted">Apply filters to search products</h4>
                        <p class="text-muted">Use the filter options on the left to narrow down your search.</p>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            $('#filterForm').on('submit', function (e) {
                e.preventDefault(); // Prevent the default form submission

                var $form = $(this);
                var $submitButton = $('#applyFilterBtn');
                var originalButtonText = $submitButton.html();

                // Basic client-side validation
                if (!validatePriceRange() || !validateDateRange()) {
                    return; // Stop if validation fails
                }

                $.ajax({
                    url: $form.attr('action'),
                    type: $form.attr('method'),
                    data: $form.serialize(),
                    beforeSend: function () {
                        $submitButton.prop('disabled', true);
                        $submitButton.html('<span class="spinner-border spinner-border-sm me-2" role="status" aria-hidden="true"></span>Filtering...');
                    },
                    success: function (result) {
                        $('#filterResults').html(result);
                    },
                    error: function (xhr, status, error) {
                        // Display a user-friendly error message
                        var errorMessage = '<div class="alert alert-danger">' +
                                           '<strong>Error!</strong> An error occurred while filtering. Please try again.' +
                                           '</div>';
                        $('#filterResults').html(errorMessage);
                        console.error("AJAX Error: ", status, error, xhr.responseText);
                    },
                    complete: function () {
                        $submitButton.prop('disabled', false);
                        $submitButton.html(originalButtonText);
                    }
                });
            });

            // --- Real-time Validation Functions ---
            var minPrice = $('input[name="MinPrice"]');
            var maxPrice = $('input[name="MaxPrice"]');
            var fromDate = $('input[name="FromDate"]');
            var toDate = $('input[name="ToDate"]');

            function validatePriceRange() {
                if (minPrice.val() && maxPrice.val()) {
                    if (parseFloat(minPrice.val()) > parseFloat(maxPrice.val())) {
                        maxPrice[0].setCustomValidity('Maximum price must be greater than minimum price');
                        maxPrice[0].reportValidity();
                        return false;
                    } else {
                        maxPrice[0].setCustomValidity('');
                    }
                }
                return true;
            }

            function validateDateRange() {
                if (fromDate.val() && toDate.val()) {
                    if (new Date(fromDate.val()) > new Date(toDate.val())) {
                        toDate[0].setCustomValidity('To date must be after from date');
                        toDate[0].reportValidity();
                        return false;
                    } else {
                        toDate[0].setCustomValidity('');
                    }
                }
                return true;
            }

            // Attach event listeners for real-time validation
            minPrice.on('input', validatePriceRange);
            maxPrice.on('input', validatePriceRange);
            fromDate.on('change', validateDateRange);
            toDate.on('change', validateDateRange);
        });
    </script>
}
